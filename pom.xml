<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>com.malbi.sync.web</groupId>
  <artifactId>sku-web-sync</artifactId>
  <packaging>war</packaging>
  <version>1.0-SNAPSHOT</version>
  <name>sku-web-sync Maven Webapp</name>
  
  <properties>
  	<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
  	<mojarra-version>2.2.12</mojarra-version>
<!--   	<webflow-version>2.4.2.RELEASE</webflow-version> -->
<!--   	<spring-framework-version>4.1.6.RELEASE</spring-framework-version> -->
<!--   	<springsecurity-version>4.0.2.RELEASE</springsecurity-version> -->
  </properties>
  
<repositories>
 	<repository> 
		<id>spring</id> 
		<name>Spring Repository</name> 
		<url>http://repo.spring.io/milestone</url> 
		<releases><enabled>true</enabled></releases> 
		<snapshots><enabled>true</enabled></snapshots> 
	</repository> 
	<repository>
    	<id>codelds</id>
    	<url>https://code.lds.org/nexus/content/groups/main-repo</url>
    </repository>
</repositories>
 
  <url>http://maven.apache.org</url>
  
  
<dependencies>
	<dependency>
  		<groupId>com.oracle</groupId> 
  		<artifactId>ojdbc6</artifactId> 
  		<version>11.2.0.3</version> 
  	</dependency>
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>4.12</version>
      <scope>test</scope>
    </dependency>
	
	<!-- JSF implementation: Mojarra org.glassfish - is the one at org.glassfish and it is working! -->
	
	<dependency>
		<groupId>org.glassfish</groupId>
		<artifactId>javax.faces</artifactId>
		<version>${mojarra-version}</version>
		 <scope>provided</scope>
	</dependency>
	
	<!-- Maven doesn't compile without it -->
	<dependency>
		<groupId>javax.servlet</groupId>
		<artifactId>javax.servlet-api</artifactId>
		<version>3.1.0</version>
		<scope>provided</scope>
	</dependency>

<!--	
	<dependency>
		<groupId>com.sun.faces</groupId>
		<artifactId>jsf-impl</artifactId>
		<version>${mojarra-version}</version>
	</dependency>
	<dependency>
		<groupId>com.sun.faces</groupId>
		<artifactId>jsf-api</artifactId>
		<version>${mojarra-version}</version>
	</dependency>
	
 -->
	
	
	
	<!-- Adding Spring Security 4 dependencies -->
	<!--
	<dependency>
		<groupId>org.springframework.security</groupId>
		<artifactId>spring-security-config</artifactId>
		<version>${springsecurity-version}</version>
	</dependency>
	  	<dependency>
  		<groupId>org.springframework</groupId>
  		<artifactId>spring-context</artifactId>
  		<version>${spring-framework-version}</version>
  	</dependency>
    <dependency>
        <groupId>org.springframework.security</groupId>
        <artifactId>spring-security-web</artifactId>
        <version>${springsecurity-version}</version>
    </dependency>
    <dependency>
		<groupId>org.springframework.security</groupId>
		<artifactId>spring-security-core</artifactId>
		<version>${springsecurity-version}</version>
	</dependency>
	<dependency>
		<groupId>org.springframework</groupId>
		<artifactId>spring-core</artifactId>
		<version>${spring-framework-version}</version>
	</dependency>
	<dependency>
		<groupId>org.springframework</groupId>
		<artifactId>spring-webmvc</artifactId>
		<version>${spring-framework-version}</version>
	</dependency>
	<dependency>
		<groupId>org.springframework</groupId>
		<artifactId>spring-beans</artifactId>
		<version>${spring-framework-version}</version>
	</dependency>
	<dependency>
		<groupId>org.springframework</groupId>
		<artifactId>spring-web</artifactId>
		<version>${spring-framework-version}</version>
	</dependency>
	<dependency> 
		<groupId>org.springframework.webflow</groupId> 
		<artifactId>spring-faces</artifactId> 
		<version>${webflow-version}</version> 
	</dependency> 
	
-->
	<!-- Spring requires it -->
	<dependency>
		<groupId>commons-logging</groupId>
		<artifactId>commons-logging</artifactId>
		<version>1.2</version>
	</dependency>
	
	<dependency>
		<groupId>org.hibernate</groupId>
		<artifactId>hibernate-validator</artifactId>
		<version>5.2.1.Final</version>
	</dependency>
	
	<!--  Work with Excel -->
	<dependency>
    	<groupId>org.apache.poi</groupId>
        <artifactId>poi</artifactId>
        <version>3.13</version>
    </dependency>
    <dependency>
		<groupId>org.glassfish.main.common</groupId>
		<artifactId>glassfish-api</artifactId>
		<version>4.1</version>
		<scope>provided</scope>
    </dependency>
    <dependency>
  		<groupId>javax.enterprise</groupId>
  		<artifactId>cdi-api</artifactId>
  		<version>1.2</version>
  		<scope>provided</scope>
  	</dependency>
</dependencies>

  <build>
    <finalName>sku-web-sync</finalName>
    <sourceDirectory>src/main/java</sourceDirectory>
    <resources>
      <resource>
        <directory>src/main/recources</directory>
        <excludes>
          <exclude>**/*.java</exclude>
        </excludes>
      </resource>
    </resources>
    
	<defaultGoal>install</defaultGoal>
	<testResources>
	  <testResource>
	  	<!-- declared explicitly so Spring config files can be placed next to their corresponding JUnit test class  -->
	    <directory>${project.basedir}/src/test/java</directory>
	  </testResource>
	  <testResource>
	    <directory>${project.basedir}/src/test/resources</directory>
	  </testResource>
	</testResources>  
		    
 	<plugins>
 		<plugin>
        	<artifactId>maven-compiler-plugin</artifactId>
        	<version>3.3</version>
        	<configuration>
          		<source>1.8</source>
          		<target>1.8</target>
        	</configuration>
      	</plugin>
      	<plugin>
        	<artifactId>maven-war-plugin</artifactId>
        	<version>2.6</version>
        	<configuration>
          		<warSourceDirectory>src/main/webapp</warSourceDirectory>
          		<failOnMissingWebXml>false</failOnMissingWebXml>
				<packagingExcludes>WEB-INF/web.xml</packagingExcludes>
        		<warName>${rp.build.warname}</warName>
	        </configuration>
    	</plugin>
    	<!-- We will use Glassfish for hosting this app -->
<!-- 		<plugin> -->
<!--         	<groupId>org.apache.tomcat.maven</groupId> -->
<!--         	<artifactId>tomcat7-maven-plugin</artifactId> -->
<!--         	<version>2.2</version> -->
<!--         	<configuration> -->
<!--         		<url>http://localhost:8080/manager/text</url> -->
<!--         		<server>TomcatServer</server> -->
<!--         		<username>admin</username> -->
<!--         		<password>admin</password> -->
<!--         		<warFile>${project.build.directory}/${rp.build.warname}.war</warFile> -->
<!--         		<update>true</update> -->
<!--         	</configuration> -->
<!--       	</plugin> -->
      
 	</plugins>   
  </build>
  <profiles>
 	<profile>
        <id>test</id> 
        <properties>
            <rp.build.warname>sku-web-sync-test</rp.build.warname>
        </properties>
    </profile>
    <profile>
        <id>prod</id>
        <properties>
            <rp.build.warname>sku-web-sync</rp.build.warname>
        </properties>
    </profile>
 </profiles> 
</project>
