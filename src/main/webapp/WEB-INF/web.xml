<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xmlns="http://xmlns.jcp.org/xml/ns/javaee" 
xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-app_3_1.xsd" 
id="WebApp_ID" version="3.1">

  <display-name>SKUwebsync</display-name>

  	<context-param>
    	<description>State saving method: 'client' or 'server' (=default). See JSF Specification 2.5.2</description>
    	<param-name>javax.faces.STATE_SAVING_METHOD</param-name>
    	<param-value>client</param-value>
	</context-param>
  
	<context-param>
    	<param-name>javax.faces.PROJECT_STAGE</param-name>
    	<param-value>Development</param-value>
	</context-param>

<!--   <context-param> -->
<!--     <param-name>javax.servlet.jsp.jstl.fmt.localizationContext</param-name> -->
<!--     <param-value>resources.application</param-value> -->
<!--   </context-param> -->
  
	<context-param>
    	<param-name>javax.faces.INTERPRET_EMPTY_STRING_SUBMITTED_VALUES_AS_NULL</param-name>
    	<param-value>true</param-value>
	</context-param>

	<context-param>
    	<param-name>javax.faces.DATETIMECONVERTER_DEFAULT_TIMEZONE_IS_SYSTEM_TIMEZONE</param-name>
    	<param-value>true</param-value>
	</context-param>
	
	<!-- To workaround  Facelet[/xlsupload.xhtml] was modified message -->
	<!-- http://stackoverflow.com/questions/3820111/facelet-was-modified-messages -->
	<context-param>
		<param-name>javax.faces.FACELETS_REFRESH_PERIOD</param-name>
		<param-value>-1</param-value>
	</context-param>
	
	<servlet>
    	<servlet-name>Faces Servlet</servlet-name>
    	<servlet-class>javax.faces.webapp.FacesServlet</servlet-class>
    	<load-on-startup>1</load-on-startup>
	</servlet>
  
	<servlet-mapping>
    	<servlet-name>Faces Servlet</servlet-name>
    	<url-pattern>*.xhtml</url-pattern>
	</servlet-mapping>
  
	<servlet-mapping>
    	<servlet-name>Faces Servlet</servlet-name>
    	<url-pattern>*.jsf</url-pattern>
	</servlet-mapping>
	
	<!-- Adding filter -->
	<!-- Since 22.10.2015 we have native Glassfish authentication -->
<!-- 	<filter> -->
<!-- 		<filter-name>AuthFilter</filter-name> -->
<!-- 		<filter-class>com.malbi.sync.sku.application.AuthorizationFilter</filter-class> -->
<!-- 	</filter> -->
<!-- 	<filter-mapping> -->
<!-- 		<filter-name>AuthFilter</filter-name> -->
<!-- 		<servlet-name>Faces Servlet</servlet-name> -->
<!-- 		<url-pattern>/*</url-pattern> -->
<!-- 	</filter-mapping> -->
	  
	<welcome-file-list>
   		<welcome-file>xlsupload.xhtml</welcome-file>
	</welcome-file-list>

	<security-constraint> 
        <display-name>validUser</display-name> 
        <web-resource-collection> 
             <web-resource-name>application</web-resource-name> 
             <description/> 
             <url-pattern>/*</url-pattern> 
        </web-resource-collection> 
        <auth-constraint> 
             <description>Only Registered user can access this</description> 
             <role-name>USER</role-name> 
     	</auth-constraint> 
	</security-constraint> 
	
	 <login-config>
	     <auth-method>FORM</auth-method>
	     <realm-name>LoginRealm</realm-name>
	     <form-login-config>
	         <form-login-page>/login.xhtml</form-login-page>
	         <form-error-page>/login.xhtml</form-error-page>
	     </form-login-config>
	 </login-config>
 
	<security-role>
		<description>User</description>
  		<role-name>USER</role-name>
 	</security-role>

<!-- Re-organaized classes that work with @Resource from static to usual -->
<!-- Fixed this with adding private static field with @Resource(name = "Oracle") annotation  DOESN'T WORK  -->
<!-- This section is needed to workaround Glassfish bug when choosing datasource pool.  -->	
<!-- 	<resource-ref> -->
<!-- 		<description>Oracle database datasource</description> -->
<!-- 		<res-ref-name>Oracle</res-ref-name> -->
<!-- 		<res-type>javax.sql.DataSource</res-type> -->
<!-- 		<res-auth>Container</res-auth> -->
<!-- 		<lookup-name>Oracle</lookup-name> -->
<!-- 	</resource-ref> -->

</web-app>